{"version":3,"sources":["decorator/saferender.js","components/common/dialog/dialog.js","components/common/showTip/tiptool.js","webIM/init.js","data/action/actionType.js","components/login/signup.js","data/action/sign.js","components/login/signin.js","untils/token.js","components/chat/sliderBar.js","components/chat/chatroom.js","components/404/notfound.js","data/create.js","data/reducer/sign.js","App.js","serviceWorker.js","index.js"],"names":["saferender","config","arguments","length","undefined","target","forEach","method","fn","unsafe","prototype","call","this","error","report","displayName","name","state","props","message","stack","errorHandler","console","e","Component","tipwrapper","timer","Tip","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","optional","react_default","a","createElement","className","concat","type","title","showTip","hideTip","document","body","appendChild","ReactDOM","render","tiptool_Tip","clearInterval","setTimeout","unmountComponentAtNode","parentNode","removeChild","defaultProps","WebIM","window","conn","connection","isMultiLoginSessions","https","url","xmppURL","heartBeatWait","autoReconnectNumMax","autoReconnectInterval","apiUrl","apiURL","isHttpDNS","isWindowSDK","isAutoLogin","encrypt","delivery","REG_STATE","signup","connect","regState","sign","regist","options","dispatch","Promise","resolve","reject","success","payload","registerUser","_this","username","refs","value","trim","password","nickname","appKey","then","history","push","catch","bind","assertThisInitialized","ref","placeholder","onClick","Link","to","signin","loginAction","data","open","user","pwd","newToken","access_token","sliderBar","aria-hidden","xlinkHref","ChatRoom","registState","sliderBar_sliderBar","notfound","_reducers","action","assign","reducers","combineReducers","middlewares","thunk","store","applyMiddleware","apply","createStore","finalCreateStore","App","es","BrowserRouter","Switch","Route","path","component","SignIn","NotFound","SignUp","Boolean","location","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6XACe,SAASA,IAAoC,IAAzBC,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhB,aACxC,OAAO,SAASG,GACE,CACV,qBACA,SACA,oBACA,sBACA,wBACA,qBACA,4BACA,wBAGIC,QAAQ,SAACC,GAEb,IAAIC,EAAgB,0BAAXD,GAA6D,WAClE,OAAO,MAGPE,EAASJ,EAAOK,UAAUH,IAAWC,EACzCH,EAAOK,UAAUH,GAAU,WACvB,IACI,OAAOE,EAAOE,KAAKC,KAAKV,WAC3B,MAAOW,GACJ,IAAIC,EAAS,CACTC,YAAYV,EAAOW,KACnBT,OAAOA,EACPU,MAAML,KAAKK,MACXC,MAAMN,KAAKM,MACXC,QAAQN,EAAMO,OAEdnB,EAAOoB,cACPC,QAAQT,MAAM,QAAQC,GAE1Bb,EAAOoB,aAAepB,EAAOoB,cAAgB,SAASE,GAClDD,QAAQT,MAAM,QAAQU,IAE1BtB,EAAOoB,aAAaP,cChCnBU,sBCwBjBC,EACAC,EA1BEC,cAIF,SAAAA,EAAYT,GAAO,OAAAU,OAAAC,EAAA,EAAAD,CAAAhB,KAAAe,GAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAD,GAAAhB,KAAAC,KACTM,0EASN,IAAIc,EAAWpB,KAAKM,MAAM,GAC1B,OACIe,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OAAAC,OAASL,EAASM,MAAQ1B,KAAKM,MAAMoB,OAC/CL,EAAAC,EAAAC,cAAA,eACKH,EAASO,OAAS3B,KAAKM,MAAMqB,eAlBhCf,aA2BX,SAASgB,IACRf,GAAagB,IACjBhB,EAAaiB,SAASP,cAAc,OACpCO,SAASC,KAAKC,YAAYnB,GAC1BoB,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAQ7C,WAAauB,GAClCC,GACAsB,cAActB,GAElBA,EAAQuB,WAAW,WACfR,KACF,KAGN,SAASA,IACDhB,IACAoB,IAASK,uBAAuBzB,GAChCA,EAAW0B,WAAWC,YAAY3B,GAClCA,EAAa,MA5CfE,EASK0B,aAAe,CAClBd,MAAO,eACPD,KAAM,yBCfVgB,EAAQC,OAAOD,MACfE,EAAO,IAAIF,EAAMG,WAAW,CAC5BC,qBAAsBJ,EAAMrD,OAAOyD,qBACnCC,OAAO,EACPC,IAAKN,EAAMrD,OAAO4D,QAClBC,cAAeR,EAAMrD,OAAO6D,cAC5BC,oBAAqBT,EAAMrD,OAAO8D,oBAClCC,sBAAuBV,EAAMrD,OAAO+D,sBACpCC,OAAQX,EAAMrD,OAAOiE,OACrBC,UAAWb,EAAMrD,OAAOkE,UACxBC,YAAad,EAAMrD,OAAOmE,YAC1BC,aAAa,EACbC,QAAShB,EAAMrD,OAAOqE,QACtBC,SAAUjB,EAAMrD,OAAOsE,WAMZjB,EAHfA,EAAQ,CACJE,KAAMA,WChBGgB,EAAY,kBCuFTC,EA5EfC,YACG,SAAAzD,GAAK,MAAK,CAEN0D,SAAU1D,EAAM2D,KAAKD,WAEzB,CACIE,OCfD,SAAgBC,GAEnB,OAAQ,SAACC,GACL,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACXJ,EAAQK,QACVL,EAAQjE,MACpBiE,EAAQK,QAAU,WACdJ,EAAS,CAACzC,KAAMkC,EAAUY,QAAQ,CAACnE,MAAM,KACzCgE,KAEJH,EAAQjE,MAAQ,SAAUU,GACtBwD,EAAS,CAACzC,KAAMkC,EAAUY,QAAQ,CAACnE,MAAM,KACzCiE,EAAO3D,IAEXwD,EAAS,CAACzC,KAAMkC,EAAUY,QAAQ,CAACnE,MAAM,KACzCqC,EAAME,KAAK6B,aAAaP,WDKnC9E,EAAW,CACRqB,aAAc,SAACR,qBAKf,SAAA4D,EAAYvD,GAAM,IAAAoE,EAAA,OAAA1D,OAAAC,EAAA,EAAAD,CAAAhB,KAAA6D,IACda,EAAA1D,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA6C,GAAA9D,KAAAC,KAAMM,KAQVuD,OAAS,WACL,IAAIc,EAAWD,EAAKE,KAAKD,SAASE,MAAMC,OACpCC,EAAWL,EAAKE,KAAKG,SAASF,MAAMC,OACpCE,EAAWN,EAAKE,KAAKI,SAASH,MAAMC,OACxC,GAAKH,GAAaI,GAAcC,EAAhC,CAOA,IAAId,EAAU,CACVS,SAAUA,EACVI,SAAUA,EACVC,SAAUA,EACVC,OAAQ,oBACR5B,OAAQ,yBAEZqB,EAAKpE,MAAM2D,OAAOC,GAASgB,KAAK,WAC5BtD,EAAQ,CACJD,MAAO,2BACPD,KAAM,YAEVgD,EAAKpE,MAAM6E,QAAQC,KAAK,aACzBC,MAAM,SAAA1E,GACLiB,EAAQ,CACJD,MAAO,iCACPD,KAAM,iBAtBVE,EAAQ,CACJD,MAAO,mDACPD,KAAM,WAddgD,EAAKrE,MAAQ,CACTD,KAAK,YAGTsE,EAAKb,OAASa,EAAKb,OAAOyB,KAAZtE,OAAAuE,EAAA,EAAAvE,QAAAuE,EAAA,EAAAvE,CAAA0D,KANAA,wEA2Cd,OACIrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAW9D,KAAK,OAAOtB,KAAK,WAAWqF,YAAY,uBAC9DpE,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAW9D,KAAK,WAAWtB,KAAK,WAAWqF,YAAY,iBAClEpE,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAW9D,KAAK,OAAOtB,KAAK,WAAWqF,YAAY,iBAC9DpE,EAAAC,EAAAC,cAAA,UAAQmE,QAAS1F,KAAK6D,QAAtB,gBACAxC,EAAAC,EAAAC,cAAA,0CACIF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAG,WAAT,0BArDHhF,6BEqDLiF,EAtEf/B,YACG,SAAAzD,GAAK,MAAK,CACN0D,SAAU1D,EAAM2D,KAAKD,WAEzB,CACI+B,YDOD,SAAqB5B,GACxB,OAAQ,SAACC,GACL,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACXJ,EAAQK,QACVL,EAAQjE,MACpBiE,EAAQK,QAAU,SAAUwB,GACxB1B,EAAQ0B,IAEZ7B,EAAQjE,MAAQ,SAAUU,GACtB2D,EAAO3D,IAEX+B,EAAME,KAAKoD,KAAK9B,WCb3B9E,EAAW,CACRqB,aAAc,SAACR,qBAKf,SAAA4F,IAAa,IAAAnB,EAAA,OAAA1D,OAAAC,EAAA,EAAAD,CAAAhB,KAAA6F,IACTnB,EAAA1D,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAA6E,GAAA9F,KAAAC,QAQJ6F,OAAS,WACL,IAAIlB,EAAWD,EAAKE,KAAKD,SAASE,MAAMC,OACpCC,EAAWL,EAAKE,KAAKG,SAASF,MAAMC,OACxC,GAAKH,GAAaI,EAAlB,CAOA,IAAIb,EAAU,CACV+B,KAAMtB,EACNuB,IAAKnB,EACLE,OAAQ,oBACR5B,OAAQ,2BAIZyC,EADoBpB,EAAKpE,MAApBwF,aACO5B,GAASgB,KAAK,SAACa,GCnD5B,IAAkBI,EDoDbvE,EAAQ,CACJD,MAAO,2BACPD,KAAM,YCtDGyE,EDwDJJ,EAAKK,aCvDdD,EDwDAzB,EAAKpE,MAAM6E,QAAQC,KAAK,eACzBC,MAAM,SAAA1E,GACLiB,EAAQ,CACJD,MAAO,2BACPD,KAAM,iBAxBVE,EAAQ,CACJD,MAAO,mDACPD,KAAM,WAbdgD,EAAKrE,MAAQ,CACTD,KAAK,YAGTsE,EAAKmB,OAASnB,EAAKmB,OAAOP,KAAZtE,OAAAuE,EAAA,EAAAvE,QAAAuE,EAAA,EAAAvE,CAAA0D,KANLA,wEA0CT,OACIrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAW9D,KAAK,OAAOtB,KAAK,WAAWqF,YAAY,uBAC9DpE,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAW9D,KAAK,WAAWtB,KAAK,WAAWqF,YAAY,iBAClEpE,EAAAC,EAAAC,cAAA,UAAQmE,QAAS1F,KAAK6F,QAAtB,yBAjDCjF,qBEtBAyF,gMAEb,OACIhF,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACfH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8E,cAAY,QAC9BjF,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,gBAEnBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,aAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc8E,cAAY,QACrCjF,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,iBAGvBlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8E,cAAY,QAC9BjF,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,wBAGvBlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO8E,cAAY,QAC9BjF,EAAAC,EAAAC,cAAA,OAAKgF,UAAU,4BAtBA3F,cCuBxB4F,EApBd1C,YACG,SAAAzD,GAAK,MAAK,CACNoG,YAAYpG,EAAM2D,KAAKD,cAG9B3E,EAAW,SAACa,yLAKL,OACIoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACmF,EAAD,eALG9F,qBCDR+F,EAXdvH,EAAW,SAACa,yLAKL,OACIoB,EAAAC,EAAAC,cAAA,6DAHWX,qCCDjBgG,EAAY,CACd5C,KCJW,WAEJ,IAFyB3D,EAEzBf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFiC,CACxCyE,SAAU,GACZ8C,EAASvH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACP,OAAQqH,EAAOnF,MACX,KAAKkC,EACD,OAAO5C,OAAO8F,OAAOzG,EAAM,CACvB0D,SAAU8C,EAAOrC,QAAQnE,QAEjC,QACI,OAAOA,KDFb0G,EAAWC,YAAgBJ,GAG7BK,EAAc,CAACC,KAMHC,EAJOC,IAAeC,WAAf,EAAmBJ,EAAnBG,CAAgCE,IAEzCC,CAAiBR,2BEkBhBS,mLAlBT,OACInG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAUN,MAAOA,GACb9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACIrG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACItG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWC,IACjC1G,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWtB,IACnCnF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAWE,IAC9B3G,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWG,gBAXvCrH,aCHEsH,QACW,cAA7BvF,OAAOwF,SAASC,UAEe,UAA7BzF,OAAOwF,SAASC,UAEhBzF,OAAOwF,SAASC,SAASC,MACvB,2DCZNpG,IAASC,OAAOb,EAAAC,EAAAC,cAAC+G,EAAD,MAASxG,SAASyG,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,KAAK,SAAAyD,GACjCA,EAAaC","file":"static/js/main.e4e03a29.chunk.js","sourcesContent":["\nexport default function saferender(config = function () {}) {\n    return function(target) {\n        let actions = [\n            'componentWillMount',\n            'render',\n            'componentDidMount',\n            'componentWillUpdate',\n            'shouldComponentUpdate',\n            'componentDidUpdate',\n            'componentWillReceiveProps',\n            'componentWillUnmount'\n        ]\n        \n        actions.forEach((method)=>{\n\n            let fn = method === 'shouldComponentUpdate' ? shouldComponentUpdate():function () {\n                return null\n            }\n            //组件执行了生命周期的方法才有此方法,不然就是空的\n            let unsafe = target.prototype[method] || fn\n            target.prototype[method] = function () {\n                try {\n                    return unsafe.call(this,arguments)\n                }catch (error) {\n                    let report = {\n                        displayName:target.name,\n                        method:method,\n                        state:this.state,\n                        props:this.props,\n                        message:error.stack,\n                    }\n                    if (config.errorHandler){\n                        console.error('Error',report)\n                    }\n                    config.errorHandler = config.errorHandler || function(e){\n                        console.error('Error',e)\n                    }\n                    config.errorHandler(report)\n                }\n            }\n        })\n    }\n\n}\n\nfunction shouldComponentUpdate() {\n    return true\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\n\nclass Dialog extends Component{\n\n    render(){\n       return(\n           <div className='dialog'>\n               <p>加载中...</p>\n           </div>\n       )\n    }\n}\n\nlet wrapper\nconst show = (props) => {\n    wrapper = document.createElement('div');\n    document.body.appendChild(wrapper);\n    ReactDOM.render(<Dialog/>,wrapper)\n}\n\n\nconst hide = () => {\n    ReactDOM.unmountComponentAtNode(wrapper)\n    wrapper.parentNode.removeChild(wrapper);\n    wrapper = null\n}\n\nexport default {\n    show: show,\n    hide: hide\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nclass Tip extends Component{\n    /*\n    * 这里要写props，不然获取不到props\n    */\n    constructor(props){\n        super(props)\n\n    }\n    //设置默认props\n    static defaultProps = {\n        title: '成功',\n        type: 'success'\n    }\n    render(){\n        let optional = this.props[0]\n        return(\n            <div className={`tip ${optional.type || this.props.type}`}>\n                <section>\n                    {optional.title || this.props.title}\n                </section>\n            </div>\n        )\n    }\n}\n\nlet tipwrapper\nlet timer\nexport function showTip() {\n    if (tipwrapper) {hideTip()}\n    tipwrapper = document.createElement('div')\n    document.body.appendChild(tipwrapper)\n    ReactDOM.render(<Tip {...arguments}/>,tipwrapper)\n    if (timer){\n        clearInterval(timer)\n    }\n    timer = setTimeout(()=>{\n        hideTip()\n    },2000)\n}\n\nfunction hideTip() {\n    if (tipwrapper) {\n        ReactDOM.unmountComponentAtNode(tipwrapper)\n        tipwrapper.parentNode.removeChild(tipwrapper);\n        tipwrapper = null\n    }\n}\n\n\n","\nlet WebIM = window.WebIM\nlet conn = new WebIM.connection({\n    isMultiLoginSessions: WebIM.config.isMultiLoginSessions,\n    https: false,\n    url: WebIM.config.xmppURL,\n    heartBeatWait: WebIM.config.heartBeatWait,\n    autoReconnectNumMax: WebIM.config.autoReconnectNumMax,\n    autoReconnectInterval: WebIM.config.autoReconnectInterval,\n    apiUrl: WebIM.config.apiURL,\n    isHttpDNS: WebIM.config.isHttpDNS,\n    isWindowSDK: WebIM.config.isWindowSDK,\n    isAutoLogin: true,\n    encrypt: WebIM.config.encrypt,\n    delivery: WebIM.config.delivery\n});\n\nWebIM = {\n    conn: conn\n}\nexport default WebIM\n","\n//注册\nexport const REG_STATE = 'reg_state'","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport {showTip} from '../common/showTip/tiptool'\nimport {Link} from 'react-router-dom'\nimport WebIM from '@src/webIM/init'\nimport { connect } from \"react-redux\";\nimport {regist} from '@src/data/action/sign'\n\n/*通过decorator获取store里面的值*/\n/*第一个是数据,第二个是操作函数*/\n@connect(\n    state => ({\n        /*注册状态*/\n        regState: state.sign.regState\n    }),\n    {\n        regist\n    }\n)\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n       //错误处理\n    }\n})\nclass signup extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signup = this.signup.bind(this)\n    }\n\n    signup = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        let nickname = this.refs.nickname.value.trim()\n        if (!username || !password  || !nickname) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n        let options = {\n            username: username,\n            password: password,\n            nickname: nickname,\n            appKey: 'seventcq#react-im',\n            apiUrl: 'http://a1.easemob.com'\n        }\n        this.props.regist(options).then(()=>{\n            showTip({\n                title: '注册成功',\n                type: 'success'\n            })\n            this.props.history.push('/signin')\n        }).catch(e => {\n            showTip({\n                title: '用户已存在',\n                type: 'error'\n            })\n        })\n\n    }\n    render(){\n        /*Link主要是虚拟dom中应用*/\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>注册</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <input ref='nickname' type=\"text\" name='nickname' placeholder='昵称'/>\n                    <button onClick={this.signup}>注册</button>\n                    <p>已有账号，\n                        <Link to=\"/signin\">登录</Link>\n                    </p>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signup;\n\n/*通过导出connect获取store 第二种写法 */\n// function mapStateToProps(state){\n//    return state\n// }\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         add1: ()=> dispatch({type:'add', payload: 1})\n//     }\n// }\n// export default  connect(mapStateToProps,mapDispatchToProps)(signup);","\nimport WebIM from '@src/webIM/init'\nimport {REG_STATE} from './actionType'\n\nexport function regist(options) {\n    /*默认会传入一个 dispatch */\n    return  (dispatch) => {\n        return new Promise((resolve, reject) => {\n            let success = options.success\n            let error = options.error\n            options.success = function () {\n                dispatch({type: REG_STATE,payload:{state:2}})\n                resolve()\n            }\n            options.error = function (e) {\n                dispatch({type: REG_STATE,payload:{state:3}})\n                reject(e)\n            }\n            dispatch({type: REG_STATE,payload:{state:1}})\n            WebIM.conn.registerUser(options)\n        })\n    }\n}\n\nexport function loginAction(options) {\n    return  (dispatch) => {\n        return new Promise((resolve, reject) => {\n            let success = options.success\n            let error = options.error\n            options.success = function (data) {\n                resolve(data)\n            }\n            options.error = function (e) {\n                reject(e)\n            }\n            WebIM.conn.open(options)\n        })\n    }\n}","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport WebIM from '@src/webIM/init'\nimport {showTip} from '../common/showTip/tiptool'\nimport {history} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {loginAction} from '@src/data/action/sign'\nimport {setToken} from \"../../untils/token\";\n\n@connect(\n    state => ({\n        regState: state.sign.regState\n    }),\n    {\n        loginAction\n    }\n)\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n        //错误处理\n    }\n})\nclass signin extends Component{\n    constructor(){\n        super()\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signin = this.signin.bind(this)\n    }\n\n    signin = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        if (!username || !password) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n        let options = {\n            user: username,\n            pwd: password,\n            appKey: 'seventcq#react-im',\n            apiUrl: 'https://a1.easemob.com',\n        }\n\n        let {loginAction} = this.props\n        loginAction(options).then((data)=>{\n            showTip({\n                title: '登录成功',\n                type: 'success'\n            })\n            setToken(data.access_token)\n            this.props.history.push('/chatroom')\n        }).catch(e => {\n            showTip({\n                title: '未知错误',\n                type: 'error'\n            })\n        })\n    }\n    render(){\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>登录</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <button onClick={this.signin}>登录</button>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signin","let token = ''\nexport function getToken(){\n    return token\n}\nexport function setToken(newToken) {\n    token = newToken\n}","\nimport React,{Component} from 'react'\nimport './css/slider.scss'\n\n\nexport default class sliderBar extends Component{\n    render(){\n        return(\n            <section className='sliderBar'>\n                <header>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-user\"></use>\n                    </svg>\n                    <p className='username'>username</p>\n                </header>\n                <div className='singleChat'>\n                    <svg className=\"icon active\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-chat\"></use>\n                    </svg>\n                </div>\n                <div className='groupChat'>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-chatbubbles\"></use>\n                    </svg>\n                </div>\n                <div className='setting active'>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-setting\"></use>\n                    </svg>\n                </div>\n            </section>\n        )\n    }\n}","\nimport React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\nimport {connect} from 'react-redux'\nimport {getToken} from \"../../untils/token\";\nimport './css/chatroom.scss'\nimport Silder from './sliderBar'\n\n@connect(\n    state => ({\n        registState:state.sign.regState\n    })\n)\n@saferender((error)=>{\n\n})\nclass ChatRoom extends Component {\n    render(){\n        return(\n            <div className='room-wrapper'>\n                <div className='room'>\n                    <Silder></Silder>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ChatRoom","\nimport React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\n\n@saferender((error)=>{\n\n})\nclass notfound extends Component {\n    render(){\n        return(\n            <div>404未找到该页面</div>\n        )\n    }\n\n}\nexport default notfound","\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport sign from './reducer/sign'\nimport thunk from 'redux-thunk';\n\n\nconst _reducers = {\n    sign: sign\n}\n\nconst reducers = combineReducers(_reducers);\n\n/*使用异步必须配置thunk 例如Promise*/\nlet middlewares = [thunk]\n\nlet finalCreateStore = applyMiddleware(...middlewares)(createStore);\n\nconst store = finalCreateStore(reducers);\n\nexport default  store\n\n\n\n\n// const reducer = (state, action)=>{\n//     if(state === undefined){\n//         return {n: 10}\n//     }else{\n//         if(action.type === 'add'){\n//             var newState = {n: state.n + action.payload}\n//             return newState\n//         }else{\n//             return state\n//         }\n//     }\n// }\n//export default  const store = createStore(reducer) //一个store写法","\nimport {REG_STATE} from '../action/actionType'\n\nexport default function signReducer(state = {\n    regState: 1 //1未注册 2注册成功 3注册失败\n},action ) {\n    switch (action.type) {\n        case REG_STATE:\n            return Object.assign(state,{\n                regState: action.payload.state\n            })\n        default:\n            return state\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport SignUp from './components/login/signup'\nimport SignIn from './components/login/signin'\nimport ChatRoom from './components/chat/chatroom'\nimport NotFound from './components/404/notfound'\nimport './webIM/init'\nimport store from './data/create'\nimport {Provider} from 'react-redux'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n      return (\n          <Provider store={store}>\n              <div className=\"App\">\n                  <Router>\n                      <div>\n                          <Switch>\n                              <Route path='/signin' component={SignIn}></Route>\n                              <Route path='/chatroom' component={ChatRoom}></Route>\n                              <Route path='/404' component={NotFound}></Route>\n                              <Route path='/' component={SignUp}></Route>\n                          </Switch>\n                      </div>\n                  </Router>\n              </div>\n          </Provider>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}