{"version":3,"sources":["decorator/saferender.js","components/common/dialog/dialog.js","components/common/showTip/tiptool.js","webIM/init.js","data/action/actionType.js","components/login/signup.js","data/action/sign.js","untils/token.js","components/login/signin.js","components/common/addfriend/addfriend.js","components/common/receiveApply/receiveApply.js","components/chat/sliderBar.js","data/action/chatSelected.js","untils/event.js","data/action/session.js","components/chat/peopleList.js","components/chat/bubble.js","data/action/message.js","components/chat/chatroom.js","data/reducer/message.js","data/create.js","data/reducer/sign.js","data/reducer/session.js","data/reducer/chatSelected.js","App.js","serviceWorker.js","index.js"],"names":["saferender","config","arguments","length","undefined","target","forEach","method","fn","unsafe","prototype","call","this","error","report","displayName","name","state","props","message","stack","errorHandler","console","e","Component","tipwrapper","timer","Tip","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","optional","react_default","a","createElement","className","concat","type","title","showTip","hideTip","document","body","appendChild","ReactDOM","render","tiptool_Tip","clearInterval","setTimeout","unmountComponentAtNode","parentNode","removeChild","defaultProps","WebIM","window","conn","connection","isMultiLoginSessions","https","url","xmppURL","heartBeatWait","autoReconnectNumMax","autoReconnectInterval","apiUrl","apiURL","isHttpDNS","isWindowSDK","isAutoLogin","encrypt","delivery","appkey","REG_STATE","CHAT_STATE","FRIEND_LIST","SET_CURRENT","MSG_LIST","signup","connect","regState","sign","regist","options","dispatch","Promise","resolve","reject","success","payload","registerUser","_this","username","refs","value","trim","password","nickname","appKey","then","history","push","catch","bind","assertThisInitialized","ref","placeholder","onClick","token","getToken","signin","loginAction","data","open","user","pwd","Link","to","dom","Addfriend","close","dismissAdd","add","subscribe","addname","sliderBar","selectItem","chatselect","chatChange","singleChat","setState","selectindex","groupChat","addFriend","addfriend_Addfriend","getuser","aria-hidden","xlinkHref","untils_event","EventEmitter","Receive","acceptHandle","subscribed","from","closeReceive","unacceptHandle","unsubscribed","log","status","getRosters","getRoster","rosters","filter","roster","subscription","PeopleList","session","currentFriend","handleMessage","receiveApply_Receive","showReceive","eventEmitter","on","removeListener","_this2","map","peopleList_Bubbleitem","key","selectName","Bubbleitem","setCurrentFriend","current","clickItem","groups","_this3","jid","select","mainClassName","classnames","bubbleitem-wrapper","active","Bubblue","msgList","msglist","sendMessage","id","getUniqueId","msg","set","roomType","serverMsgId","fail","chatType","send","sendText","text","list","bubble_Bubblueitem","cols","rows","Bubblueitem","Bubblueitemwrapper","right","ChatRoom","selctItem","mesInit","listen","onOpened","onTextMessage","onRoster","onPresence","emit","chat_sliderBar","peopleList","chat_bubble","addMSG","assign","_reducers","action","toConsumableArray","objectSpread","reducers","combineReducers","middlewares","thunk","store","applyMiddleware","apply","createStore","finalCreateStore","App","children","Main","es","BrowserRouter","Route","exact","path","component","SignIn","SignUp","Boolean","location","hostname","match","App_Main","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc4a5a41.chunk.js","sourcesContent":["\nexport default function saferender(config = function () {}) {\n    return function(target) {\n        let actions = [\n            'componentWillMount',\n            'render',\n            'componentDidMount',\n            'componentWillUpdate',\n            'shouldComponentUpdate',\n            'componentDidUpdate',\n            'componentWillReceiveProps',\n            'componentWillUnmount'\n        ]\n        \n        actions.forEach((method)=>{\n            let fn = method === 'shouldComponentUpdate' ? shouldComponentUpdate():function () {\n                return null\n            }\n            //组件执行了生命周期的方法才有此方法,不然就是空的\n            let unsafe = target.prototype[method] || fn\n            target.prototype[method] = function () {\n                try {\n                    return unsafe.call(this,arguments)\n                }catch (error) {\n                    let report = {\n                        displayName:target.name,\n                        method:method,\n                        state:this.state,\n                        props:this.props,\n                        message:error.stack,\n                    }\n                    if (config.errorHandler){\n                        console.error('Error',report)\n                    }\n                    config.errorHandler = config.errorHandler || function(e){\n                        console.error('Error',e)\n                    }\n                    config.errorHandler(report)\n                }\n            }\n        })\n    }\n\n}\n\nfunction shouldComponentUpdate() {\n    return true\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\n\nclass Dialog extends Component{\n\n    render(){\n       return(\n           <div className='dialog'>\n               <p>加载中...</p>\n           </div>\n       )\n    }\n}\n\nlet wrapper\nconst show = (props) => {\n    wrapper = document.createElement('div');\n    document.body.appendChild(wrapper);\n    ReactDOM.render(<Dialog/>,wrapper)\n}\n\n\nconst hide = () => {\n    ReactDOM.unmountComponentAtNode(wrapper)\n    wrapper.parentNode.removeChild(wrapper);\n    wrapper = null\n}\n\nexport default {\n    show: show,\n    hide: hide\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nclass Tip extends Component{\n    /*\n    * 这里要写props，不然获取不到props\n    */\n    constructor(props){\n        super(props)\n\n    }\n    //设置默认props\n    static defaultProps = {\n        title: '成功',\n        type: 'success'\n    }\n    render(){\n        let optional = this.props[0]\n        return(\n            <div className={`tip ${optional.type || this.props.type}`}>\n                <section>\n                    {optional.title || this.props.title}\n                </section>\n            </div>\n        )\n    }\n}\n\nlet tipwrapper\nlet timer\nexport function showTip() {\n    if (tipwrapper) {hideTip()}\n    tipwrapper = document.createElement('div')\n    document.body.appendChild(tipwrapper)\n    ReactDOM.render(<Tip {...arguments}/>,tipwrapper)\n    if (timer){\n        clearInterval(timer)\n    }\n    timer = setTimeout(()=>{\n        hideTip()\n    },2000)\n}\n\nfunction hideTip() {\n    if (tipwrapper) {\n        ReactDOM.unmountComponentAtNode(tipwrapper)\n        tipwrapper.parentNode.removeChild(tipwrapper);\n        tipwrapper = null\n    }\n}\n\n\n","\nlet WebIM = window.WebIM\nlet conn = new WebIM.connection({\n    isMultiLoginSessions: WebIM.config.isMultiLoginSessions,\n    https: false,\n    url: WebIM.config.xmppURL,\n    heartBeatWait: WebIM.config.heartBeatWait,\n    autoReconnectNumMax: WebIM.config.autoReconnectNumMax,\n    autoReconnectInterval: WebIM.config.autoReconnectInterval,\n    apiUrl: WebIM.config.apiURL,\n    isHttpDNS: WebIM.config.isHttpDNS,\n    isWindowSDK: WebIM.config.isWindowSDK,\n    isAutoLogin: true,\n    encrypt: WebIM.config.encrypt,\n    delivery: WebIM.config.delivery,\n    appkey: WebIM.config.appkey\n});\n\nWebIM = {\n    conn: conn\n}\nexport default WebIM\n","\n//注册\nexport const REG_STATE = 'reg_state'\n\n//聊天切换模式\nexport const CHAT_STATE = 'chat_state'\n\n//好友列表\nexport const FRIEND_LIST = 'friend_list'\n\n//设置当前选中的聊天对象\nexport  const SET_CURRENT = 'set_current'\n\n//消息列表\nexport const MSG_LIST = 'msg_list'\n","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport {showTip} from '../common/showTip/tiptool'\nimport {Link} from 'react-router-dom'\nimport WebIM from '@src/webIM/init'\nimport { connect } from \"react-redux\";\nimport {regist} from '@src/data/action/sign'\n\n/*通过decorator获取store里面的值*/\n/*第一个是数据,第二个是操作函数*/\n@connect(\n    state => ({\n        /*注册状态*/\n        regState: state.sign.regState\n    }),\n    {\n        regist\n    }\n)\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n       //错误处理\n    }\n})\nclass signup extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signup = this.signup.bind(this)\n    }\n\n    signup = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        let nickname = this.refs.nickname.value.trim()\n        if (!username || !password  || !nickname) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n        let options = {\n            username: username,\n            password: password,\n            nickname: nickname,\n            appKey: 'seventcq#react-im',\n            apiUrl: 'http://a1.easemob.com'\n        }\n        this.props.regist(options).then(()=>{\n            showTip({\n                title: '注册成功',\n                type: 'success'\n            })\n            this.props.history.push('/signin')\n        }).catch(e => {\n            showTip({\n                title: '用户已存在',\n                type: 'error'\n            })\n        })\n\n    }\n    render(){\n        /*Link主要是虚拟dom中应用*/\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>注册</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <input ref='nickname' type=\"text\" name='nickname' placeholder='昵称'/>\n                    <button onClick={this.signup}>注册</button>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signup;\n\n/*通过导出connect获取store 第二种写法 */\n// function mapStateToProps(state){\n//    return state\n// }\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         add1: ()=> dispatch({type:'add', payload: 1})\n//     }\n// }\n// export default  connect(mapStateToProps,mapDispatchToProps)(signup);","\nimport WebIM from '@src/webIM/init'\nimport {REG_STATE} from './actionType'\n\nexport function regist(options) {\n    /*默认会传入一个 dispatch */\n    return  (dispatch) => {\n        return new Promise((resolve, reject) => {\n            let success = options.success\n            let error = options.error\n            options.success = function () {\n                dispatch({type: REG_STATE,payload:{state:2}})\n                resolve()\n            }\n            options.error = function (e) {\n                dispatch({type: REG_STATE,payload:{state:3}})\n                reject(e)\n            }\n            dispatch({type: REG_STATE,payload:{state:1}})\n            WebIM.conn.registerUser(options)\n        })\n    }\n}\n\nexport function loginAction(options) {\n    return  (dispatch) => {\n        return new Promise((resolve, reject) => {\n            let success = options.success\n            let error = options.error\n            options.success = function (data) {\n                resolve(data)\n            }\n            options.error = function (e) {\n                reject(e)\n            }\n            WebIM.conn.open(options)\n        })\n    }\n}","let token = ''\nexport function getToken(){\n    return token\n}\nexport function setToken(newToken) {\n    token = newToken\n}","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport WebIM from '@src/webIM/init'\nimport {showTip} from '../common/showTip/tiptool'\nimport {history, Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {loginAction} from '@src/data/action/sign'\nimport {setToken} from \"../../untils/token\";\n\n@connect(\n    state => ({\n        regState: state.sign.regState\n    }),\n    {\n        loginAction\n    }\n)\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n        //错误处理\n    }\n})\nclass signin extends Component{\n    constructor(){\n        super()\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signin = this.signin.bind(this)\n    }\n\n    signin = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        if (!username || !password) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n        let options = {\n            user: username,\n            pwd: password,\n            appKey: 'seventcq#react-im',\n            apiUrl: 'http://a1.easemob.com'\n        }\n\n        let {loginAction} = this.props\n        loginAction(options).then((data)=>{\n            showTip({\n                title: '登录成功',\n                type: 'success'\n            })\n            setToken(data)\n            this.props.history.push('/chatroom')\n        }).catch(e => {\n            showTip({\n                title: '未知错误',\n                type: 'error'\n            })\n        })\n    }\n    render(){\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>登录</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <button onClick={this.signin}>登录</button>\n                    <p>没有账号，\n                        <Link to=\"/signup\">注册</Link>\n                    </p>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signin","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './main.scss'\nimport {showTip} from '../showTip/tiptool'\nimport WebIM from '@src/webIM/init'\n\nclass Addfriend extends Component{\n    close = ()=>{\n        dismissAdd()\n    }\n    add = ()=>{\n        WebIM.conn.subscribe({\n            to: this.refs.addname.value,\n            message: '加个好友呗!'\n        })\n        showTip({\n            title:'发送成功',\n            type:'success'\n        })\n        dismissAdd()\n    }\n    render(){\n        return(\n            <div className='addfriend-wrapper'>\n                <section className='addfriend'>\n                    <header>\n                        <span>添加好友</span>\n                        <span onClick={this.close}>x</span>\n                    </header>\n                    <main>\n                        <input ref='addname' type=\"text\" placeholder='用户名'/>\n                    </main>\n                    <footer>\n                        <button onClick={this.add}>添加</button>\n                    </footer>\n                </section>\n            </div>\n        )\n    }\n}\n\nlet dom\nexport function showAdd() {\n    if (dom) {\n        dismissAdd()\n    }\n    dom = document.createElement('div')\n    document.body.appendChild(dom)\n    ReactDOM.render(<Addfriend/>,dom)\n}\n\nexport function dismissAdd() {\n    if (dom){\n        ReactDOM.unmountComponentAtNode(dom)\n        dom.parentNode.removeChild(dom)\n        dom = null\n    }\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport WebIM from '@src/webIM/init'\n\nclass Receive extends Component{\n    constructor(props){\n        super(props)\n        console.log(this.props)\n    }\n    acceptHandle = ()=>{\n        /*同意添加好友*/\n        WebIM.conn.subscribed({\n            to: this.props.from,\n            message : '[resp:true]'\n        });\n        closeReceive()\n    }\n    unacceptHandle = ()=>{\n        /*拒绝添加好友*/\n        WebIM.conn.unsubscribed({\n            to: this.props.from,\n            message : 'rejectAddFriend'\n        });\n        closeReceive()\n    }\n    render() {\n        return (\n            <div className={'receive-wrapper'}>\n                <div className={'receive'}>\n                    <header>添加好友请求</header>\n                    <main>{this.props.from} : {this.props.status}</main>\n                    <footer>\n                        <button onClick={this.unacceptHandle}>拒绝</button>\n                        <button onClick={this.acceptHandle}>同意</button>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet dom\nexport function showReceive(message) {\n    if (dom){\n        closeReceive()\n    }\n    dom = document.createElement('div')\n    document.body.appendChild(dom)\n    ReactDOM.render(<Receive {...message}/>,dom)\n}\n\nexport function closeReceive() {\n    if (dom){\n        ReactDOM.unmountComponentAtNode(dom)\n        dom.parentNode.removeChild(dom)\n        dom = null\n    }\n}","\nimport React,{Component} from 'react'\nimport './css/slider.scss'\nimport {connect} from 'react-redux'\nimport {chatChange} from '@src/data/action/chatSelected'\nimport {showAdd} from'../common/addfriend/addfriend'\nimport {getToken} from \"@src/untils/token\";\n\n@connect(\n    state=>({\n        selectItem:state.chatselect.selectItem\n    }),\n    {\n        chatChange\n    }\n)\n class sliderBar extends Component{\n    constructor(props){\n        super(props)\n            this.state = {\n                selectindex: this.props.selectItem,\n                singleChat:true\n            }\n        }\n        singleChat = ()=>{\n            this.props.chatChange(1).then((value)=>{\n                this.setState({\n                    selectindex:value,\n                    singleChat:true\n                })\n        })\n    }\n    groupChat = ()=>{\n        this.props.chatChange(2).then((value)=>{\n            this.setState({\n                selectindex:value,\n                singleChat:false\n            })\n        })\n    }\n    addFriend = ()=> {\n        showAdd()\n    }\n    render(){\n        let getuser = getToken()\n        let username = getuser ? getuser.user.username:'请重新登录'\n        return(\n            <section className='sliderBar'>\n                <header>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-user\"></use>\n                    </svg>\n                    <p className='username'>{username}</p>\n                </header>\n                <div className='singleChat' onClick={this.singleChat}>\n                    <svg className={`icon ${this.state.singleChat === true ? 'active':''}`} aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-chat\"></use>\n                    </svg>\n                </div>\n                <div className='groupChat' onClick={this.groupChat}>\n                    <svg className={`icon ${this.state.singleChat === false ? 'active':''}`} aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-chatbubbles\"></use>\n                    </svg>\n                </div>\n                <div className='setting active' onClick={this.addFriend}>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-setting\"></use>\n                    </svg>\n                </div>\n            </section>\n        )\n    }\n}\nexport default sliderBar","import {CHAT_STATE} from \"./actionType\";\n\nexport function chatChange(options){\n    return  (dispatch) => {\n        return new Promise((resolve, reject) => {\n            dispatch({\n                type:CHAT_STATE,\n                payload:{\n                    state:options\n                }\n            })\n            resolve(options)\n        })\n\n    }\n}","\nimport EventEmitter from 'eventemitter3'\nexport default new EventEmitter()","import WebIM from '@src/webIM/init'\nimport {FRIEND_LIST,SET_CURRENT} from \"./actionType\";\n\nexport function getRosters() {\n    return (dispatch)=>{\n        return new Promise((resolve, reject) => {\n            WebIM.conn.getRoster({\n                success:(rosters)=>{\n                    rosters = rosters.filter((roster)=>{\n                        return roster.subscription === 'both'\n                    })\n                    dispatch({\n                        type:FRIEND_LIST,\n                        payload:{\n                            data:rosters\n                        }\n                    })\n                    resolve(rosters)\n                },\n                error: (e) => {\n                    reject(e);\n                }\n            })\n        })\n    }\n}\n\nexport function setCurrentFriend(options) {\n    return (dispatch)=>{\n        dispatch({\n            type: SET_CURRENT,\n            payload: {\n                current:options\n            }\n        })\n    }\n}","import React, {Component} from 'react'\nimport './css/people.scss'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport WebIM from '@src/webIM/init'\nimport eventEmitter from '@src/untils/event'\nimport {showReceive} from \"../common/receiveApply/receiveApply\";\nimport {getRosters, setCurrentFriend} from \"../../data/action/session\";\nimport classnames from 'classnames';\n@connect(\n    (state) => ({\n        rosters: state.session,\n        currentFriend: state.session.currentFriend\n    }),\n    {\n        getRosters\n    }\n)\nclass PeopleList extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentWillMount() {\n        eventEmitter.on('presenceApply', this.handleMessage)\n    }\n\n    componentWillUnmount() {\n        console.log('消除组件')\n        eventEmitter.removeListener('presenceApply', this.handleMessage);\n    }\n\n    //处理好友申请\n    handleMessage = (message) => {\n        showReceive(message)\n    }\n\n    render() {\n        /* 将修饰函数中reudx中值的改变会出发render,我们尽量可以将网络加载请求的值放在此处 */\n        let {rosters} = this.props.rosters\n        return (\n            <div className={'people-wrapper'}>\n                {rosters.length ? rosters.map((roster) => {\n                    return <Bubbleitem roster={roster} key={roster.name} selectName={this.props.currentFriend}/>\n                }) : <span></span>}\n            </div>\n        )\n    }\n}\n\nexport default PeopleList\n\n@connect(\n    state => ({\n        currentFriend: state.session.currentFriend\n    }),\n    {\n        setCurrentFriend\n    }\n)\nclass Bubbleitem extends Component {\n    clickItem = () => {\n        let options = {\n            groups: this.props.roster.groups,\n            jid: this.props.roster.jid,\n            name: this.props.roster.name,\n            subscription: this.props.roster.subscription,\n        }\n        this.props.setCurrentFriend(options)\n    }\n    render() {\n        let select = this.props.selectName || {name:''}\n        let url  = `/chatroom/single/${this.props.roster.name}`\n        let mainClassName = classnames({\n            'bubbleitem-wrapper': true,\n            'active': this.props.roster.name===select.name\n        });\n        return (\n           /* <div className={mainClassName}>\n                <Link to={url} className=\"bubbleitem-wrapper-a\" onClick={this.clickItem}>\n                    <span className={'header'}>\n                        <svg className=\"icon\" aria-hidden=\"true\">\n                            <use xlinkHref=\"#icon-user\"></use>\n                        </svg>\n                    </span>\n                    <span className={'messageinfo'}>\n                        <p>{this.props.roster.name}</p>\n                        <p></p>\n                     </span>\n                </Link>\n            </div> */\n        <div className={mainClassName} onClick={this.clickItem}>\n            <a className=\"bubbleitem-wrapper-a\">\n                <span className={'header'}>\n                    <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-user\"></use>\n                    </svg>\n                </span>\n                <span className={'messageinfo'}>\n                        <p>{this.props.roster.name}</p>\n                        <p></p>\n                </span>\n            </a>\n        </div>\n        );\n    }\n}","import React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\nimport './css/bubble.scss'\nimport {connect} from 'react-redux'\nimport WebIM from '@src/webIM/init'\nimport {sendMessage} from \"@src/data/action/message\";\nimport classnames from 'classnames'\nimport {getToken} from \"@src/untils/token\";\n\n@connect(\n    state => ({\n        currentFriend:state.session.currentFriend,\n        msgList:state.message.msglist\n    }),\n    {\n        sendMessage\n    }\n)\n@saferender(\n    (error)=>{\n\n    }\n)\nclass Bubblue extends Component{\n    shouldComponentUpdate(){\n        return true\n    }\n    sendText = ()=>{\n        let {sendMessage} = this.props\n        sendMessage(this.refs.text.value,this.props.currentFriend.name)\n        this.refs.text.value = ''\n    }\n    render() {\n        let to = this.props.currentFriend.name\n        let list = this.props.msgList[to] || []\n        return (\n            <div className={'Bubblue-wrapper'}>\n                <header>\n                    {this.props.currentFriend.name}\n                </header>\n                <main>\n                    {list.map((msg)=>{\n                        return <Bubblueitem message={msg} key={msg.id}/>\n                    })}\n                </main>\n                <footer>\n                    <div className={'textarea'}>\n                        <textarea ref='text' name=\"\" id=\"\" cols=\"30\" rows=\"10\">\n\n                        </textarea>\n                    </div>\n                    <button onClick={this.sendText}>发送</button>\n                </footer>\n            </div>\n        );\n    }\n}\nexport default Bubblue\n\n\nclass Bubblueitem extends Component{\n    render() {\n        let getuser = getToken()\n        let username = getuser ? getuser.user.username:''\n        let mainClassName = classnames({\n            Bubblueitemwrapper: true,\n            right: username === this.props.message.from\n        })\n        return (\n            <div className={mainClassName}>\n                <span className={'header'}>\n                      <svg className=\"icon\" aria-hidden=\"true\">\n                        <use xlinkHref=\"#icon-user\"></use>\n                    </svg>\n                </span>\n                <div className={'content-wrapper'}>\n                    <p className={'name'}>\n                        {this.props.message.from}\n                    </p>\n                    <div className={'content'}>\n                        {this.props.message.msg}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}","\nimport WebIM from '@src/webIM/init'\nimport eventEmitter from '@src/untils/event'\nimport {getRosters} from \"./session\";\nimport {MSG_LIST} from \"./actionType\";\nimport {getToken} from \"@src/untils/token\";\n\nexport function mesInit() {\n    return (dispatch)=>{\n        WebIM.conn.listen({\n            //连接成功回调\n            onOpened: function ( message ) {\n                /* getRosters 里面也是一个 dispatch函数所以用 dispatch 执行才会执行 return里面的*/\n                dispatch(getRosters())\n            } ,\n            //收到文本消息\n            onTextMessage: function ( message ) {\n                console.log('收到消息',message)\n                dispatch({\n                    type:MSG_LIST,\n                    payload:{\n                        msg:message.data,\n                        to:message.from,\n                        id:message.id,\n                        from:message.from\n                    }\n                })\n            },\n            //好友列表\n            onRoster: function ( roster ) {\n                console.log('好友列表',roster)\n                dispatch(getRosters())\n            },\n            //处理好友申请等消息\n            onPresence: (message) => {\n                eventEmitter.emit('presenceApply',message)\n            }\n        })\n    }\n}\n\nexport function sendMessage(message,to) {\n    return(dispatch)=>{\n        let getuser = getToken()\n        let from = getuser ? getuser.user.username:''\n\n        let id = WebIM.conn.getUniqueId();             // 生成本地消息id\n        var msg = new window.WebIM.message('txt', id);      // 创建文本消息\n        msg.set({\n            msg: message,                  // 消息内容\n            to: to,                          // 接收消息对象（用户id）\n            roomType: false,\n            success: function (id, serverMsgId) {\n                dispatch({\n                    type:MSG_LIST,\n                    payload:{\n                        msg:message,\n                        to:to,\n                        id:serverMsgId,\n                        from: from\n                    }\n                })\n            },\n            fail: function(e){\n                console.log(\"发送失败\");\n            }\n        });\n        msg.body.chatType = 'singleChat';\n        WebIM.conn.send(msg.body);\n    }\n}\n\n\n","\nimport React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\nimport {connect} from 'react-redux'\nimport './css/chatroom.scss'\nimport Silder from './sliderBar'\nimport PeopleList from './peopleList'\nimport {mesInit} from \"@src/data/action/message\";\nimport eventEmitter from '@src/untils/event'\nimport {history} from 'react-router-dom'\nimport Bubble from './bubble'\nimport {getToken} from \"../../untils/token\";\n\n@connect(\n    state => ({\n        selctItem:state.chatselect.selctItem,\n        currentFriend:state.session.currentFriend\n    }),\n    {\n        mesInit\n    }\n)\n@saferender((error)=>{\n\n})\nclass ChatRoom extends Component {\n    constructor(props){\n        super(props)\n    }\n    componentWillMount(){\n        let getuser = getToken()\n        if (!getuser){\n            this.props.history.push('/signin')\n        }else{\n            this.props.mesInit()\n        }\n    }\n    shouldComponentUpdate(){\n        return true\n    }\n    render(){\n        return(\n            <div className='room-wrapper'>\n                <div className='room'>\n                    <Silder></Silder>\n                    <PeopleList></PeopleList>\n                    {this.props.currentFriend !==null ? <Bubble/>:null}\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ChatRoom","import {MSG_LIST} from \"../action/actionType\";\n\nexport default function msgListReducer(state={\n    msglist:{}\n},action) {\n    switch (action.type) {\n        case MSG_LIST:\n            return Object.assign({},state,{\n                msglist: addMSG(action.payload.msg,action.payload.id,action.payload.from,action.payload.to,state.msglist)\n            })\n        default:\n            return state\n    }\n}\n/*\n* msg 信息\n* to 和谁的信息(to就是对应人的名字)\n* msglist 和所有人的信息\n* */\nfunction addMSG(msg,id,from,to,msglist) {\n    let list = msglist[to] || []\n    list.push({\n        msg:msg,\n        id:id,\n        from:from\n    })\n    msglist[to] = list\n    return Object.assign({},msglist)\n}","\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport '../webIM/init'\nimport sign from './reducer/sign'\nimport session from './reducer/session'\nimport chatselect from './reducer/chatSelected'\nimport message from './reducer/message'\nimport thunk from 'redux-thunk';\n\n\nconst _reducers = {\n    sign: sign,\n    session:session,\n    chatselect: chatselect,\n    message:message\n}\n\nconst reducers = combineReducers(_reducers);\n\n/*使用异步必须配置thunk 例如Promise*/\nlet middlewares = [thunk]\n\nlet finalCreateStore = applyMiddleware(...middlewares)(createStore);\n\nconst store = finalCreateStore(reducers);\n\nexport default  store\n\n\n\n\n// const reducer = (state, action)=>{\n//     if(state === undefined){\n//         return {n: 10}\n//     }else{\n//         if(action.type === 'add'){\n//             var newState = {n: state.n + action.payload}\n//             return newState\n//         }else{\n//             return state\n//         }\n//     }\n// }\n//export default  const store = createStore(reducer) //一个store写法","\nimport {REG_STATE} from '../action/actionType'\n\nexport default function signReducer(state = {\n    regState: 1 //1未注册 2注册成功 3注册失败\n},action ) {\n    switch (action.type) {\n        case REG_STATE:\n            return Object.assign(state,{\n                regState: action.payload.state\n            })\n        default:\n            return state\n    }\n}\n","\nimport {FRIEND_LIST,SET_CURRENT} from \"../action/actionType\";\n\nexport default function sessionReucer(state = {\n    rosters: [],\n    currentFriend:null\n},action) {\n    switch (action.type) {\n        case FRIEND_LIST:\n            return Object.assign({},state,{\n                rosters: [...action.payload.data]\n            })\n        case SET_CURRENT:\n            return Object.assign({},state,{\n                currentFriend:{...action.payload.current}\n            })\n        default:\n            return state\n    }\n\n}","import {CHAT_STATE} from '../action/actionType'\n\nexport default function chatReducer( state = {\n    selectItem:1 //1是单聊 2是群聊\n},action) {\n    switch (action.type) {\n        case CHAT_STATE:\n            return Object.assign(state,{\n                selctItem: action.payload.state\n            })\n        default:\n            return state\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport SignUp from './components/login/signup'\nimport SignIn from './components/login/signin'\nimport ChatRoom from './components/chat/chatroom'\nimport store from './data/create'\nimport {Provider} from 'react-redux'\nimport {getToken} from \"./untils/token\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    HashRouter\n} from 'react-router-dom';\n\nclass App extends Component {\n    componentWillMount(){\n        let getuser = getToken()\n        if (!getuser){\n            this.props.history.push('/signin')\n        }else{\n            this.props.mesInit()\n        }\n    }\n    render() {\n        return (\n            <div className=\"main\">\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div>\n                        <Route exact path=\"/\" component = {App}></Route>\n                        <Route path='/signin' component={SignIn}></Route>\n                        <Route path='/signup' component={SignUp}></Route>\n                        <Route path='/chatroom' component={ChatRoom}>\n                            /*<Route path='/:chatType/:chatId' component={ChatRoom}></Route>*/\n                        </Route>\n                    </div>\n                </Router>\n            </Provider>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}