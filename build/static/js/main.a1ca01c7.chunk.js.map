{"version":3,"sources":["decorator/saferender.js","components/common/dialog/dialog.js","components/common/showTip/tiptool.js","webIM/init.js","components/login/signup.js","components/login/signin.js","components/chat/chatroom.js","components/404/notfound.js","data/create.js","data/reducer/sign.js","App.js","serviceWorker.js","index.js"],"names":["saferender","config","arguments","length","undefined","target","forEach","method","fn","unsafe","prototype","call","this","error","report","displayName","name","state","props","message","stack","errorHandler","console","e","Component","tipwrapper","timer","Tip","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","optional","react_default","a","createElement","className","concat","type","title","showTip","hideTip","document","body","appendChild","ReactDOM","render","tiptool_Tip","clearInterval","setTimeout","unmountComponentAtNode","parentNode","removeChild","defaultProps","WebIM","window","conn","connection","isMultiLoginSessions","https","url","xmppURL","heartBeatWait","autoReconnectNumMax","autoReconnectInterval","apiUrl","apiURL","isHttpDNS","isWindowSDK","isAutoLogin","encrypt","delivery","signup","connect","regState","sign","_this","username","refs","value","trim","password","nickname","options","success","history","push","appKey","log","registerUser","bind","assertThisInitialized","ref","placeholder","onClick","Link","to","signin","ChatRoom","notfound","_reducers","action","assign","payload","reducers","combineReducers","store","thunk","applyMiddleware","createStore","finalCreateStore","App","es","BrowserRouter","Switch","Route","path","component","SignIn","NotFound","SignUp","Boolean","location","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1ca01c7.chunk.js","sourcesContent":["\nexport default function saferender(config = function () {}) {\n    return function(target) {\n        let actions = [\n            'componentWillMount',\n            'render',\n            'componentDidMount',\n            'componentWillUpdate',\n            'shouldComponentUpdate',\n            'componentDidUpdate',\n            'componentWillReceiveProps',\n            'componentWillUnmount'\n        ]\n        \n        actions.forEach((method)=>{\n\n            let fn = method === 'shouldComponentUpdate' ? shouldComponentUpdate():function () {\n                return null\n            }\n            //组件执行了生命周期的方法才有此方法,不然就是空的\n            let unsafe = target.prototype[method] || fn\n            target.prototype[method] = function () {\n                try {\n                    return unsafe.call(this,arguments)\n                }catch (error) {\n                    let report = {\n                        displayName:target.name,\n                        method:method,\n                        state:this.state,\n                        props:this.props,\n                        message:error.stack,\n                    }\n                    if (config.errorHandler){\n                        console.error('Error',report)\n                    }\n                    config.errorHandler = config.errorHandler || function(e){\n                        console.error('Error',e)\n                    }\n                    config.errorHandler(report)\n                }\n            }\n        })\n    }\n\n}\n\nfunction shouldComponentUpdate() {\n    return true\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\n\nclass Dialog extends Component{\n\n    render(){\n       return(\n           <div className='dialog'>\n               <p>加载中...</p>\n           </div>\n       )\n    }\n}\n\nlet wrapper\nconst show = (props) => {\n    wrapper = document.createElement('div');\n    document.body.appendChild(wrapper);\n    ReactDOM.render(<Dialog/>,wrapper)\n}\n\n\nconst hide = () => {\n    ReactDOM.unmountComponentAtNode(wrapper)\n    wrapper.parentNode.removeChild(wrapper);\n    wrapper = null\n}\n\nexport default {\n    show: show,\n    hide: hide\n}","\nimport React,{Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nclass Tip extends Component{\n    /*\n    * 这里要写props，不然获取不到props\n    */\n    constructor(props){\n        super(props)\n\n    }\n    //设置默认props\n    static defaultProps = {\n        title: '成功',\n        type: 'success'\n    }\n    render(){\n        let optional = this.props[0]\n        return(\n            <div className={`tip ${optional.type || this.props.type}`}>\n                <section>\n                    {optional.title || this.props.title}\n                </section>\n            </div>\n        )\n    }\n}\n\nlet tipwrapper\nlet timer\nexport function showTip() {\n    if (tipwrapper) {hideTip()}\n    tipwrapper = document.createElement('div')\n    document.body.appendChild(tipwrapper)\n    ReactDOM.render(<Tip {...arguments}/>,tipwrapper)\n    if (timer){\n        clearInterval(timer)\n    }\n    timer = setTimeout(()=>{\n        hideTip()\n    },2000)\n}\n\nfunction hideTip() {\n    if (tipwrapper) {\n        ReactDOM.unmountComponentAtNode(tipwrapper)\n        tipwrapper.parentNode.removeChild(tipwrapper);\n        tipwrapper = null\n    }\n}\n\n\n","\nlet WebIM = window.WebIM\nlet conn = new WebIM.connection({\n    isMultiLoginSessions: WebIM.config.isMultiLoginSessions,\n    https: false,\n    url: WebIM.config.xmppURL,\n    heartBeatWait: WebIM.config.heartBeatWait,\n    autoReconnectNumMax: WebIM.config.autoReconnectNumMax,\n    autoReconnectInterval: WebIM.config.autoReconnectInterval,\n    apiUrl: WebIM.config.apiURL,\n    isHttpDNS: WebIM.config.isHttpDNS,\n    isWindowSDK: WebIM.config.isWindowSDK,\n    isAutoLogin: true,\n    encrypt: WebIM.config.encrypt,\n    delivery: WebIM.config.delivery\n});\n\nWebIM = {\n    conn: conn\n}\nexport default WebIM\n","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport {showTip} from '../common/showTip/tiptool'\nimport {Link} from 'react-router-dom'\nimport WebIM from '../../webIM/init'\nimport { connect } from \"react-redux\";\n\n/*通过decorator获取store里面的值*/\n/*第一个是数据,第二个是操作函数*/\n@connect(\n    state => ({\n        /*注册状态*/\n        regState: state.sign.regState\n    }),\n)\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n       //错误处理\n    }\n})\nclass signup extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signup = this.signup.bind(this)\n    }\n\n    signup = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        let nickname = this.refs.nickname.value.trim()\n        if (!username || !password  || !nickname) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n        let options = {\n            username: username,\n            password: password,\n            nickname: nickname,\n            success: ()=>{\n                showTip({\n                    title: '注册成功',\n                    type: 'success'\n                })\n                this.props.history.push('/signin')\n            },\n            error: ()=>{\n                showTip({\n                    title: '注册失败',\n                    type: 'error'\n                })\n            },\n            appKey: 'seventcq#react-im',\n            apiUrl: 'http://a1.easemob.com'\n        }\n        console.log(options)\n        WebIM.conn.registerUser(options)\n\n    }\n    render(){\n        /*Link主要是虚拟dom中应用*/\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>注册</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <input ref='nickname' type=\"text\" name='nickname' placeholder='昵称'/>\n                    <button onClick={this.signup}>注册</button>\n                    <p>已有账号，\n                        <Link to=\"/signin\">登录{this.props.regState} </Link>\n                    </p>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signup;\n\n/*通过导出connect获取store*/\n// function mapStateToProps(state){\n//    return state\n// }\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         add1: ()=> dispatch({type:'add', payload: 1})\n//     }\n// }\n// export default  connect(mapStateToProps,mapDispatchToProps)(signup);","\nimport React,{Component} from 'react'\nimport './index.scss'\nimport saferender from '../../decorator/saferender'\nimport Dialog from '../common/dialog/dialog'\nimport {showTip} from '../common/showTip/tiptool'\nimport {history} from 'react-router-dom'\n\n// @saferender 相当于已经执行了这个函数(不用加())\n// @saferender() 相当于执行renturn的函数\n@saferender({\n    errorHandler: (error) => {\n        //错误处理\n    }\n})\nclass signin extends Component{\n    constructor(){\n        super()\n        this.state = {\n            name:'chiuyung'\n        }\n\n        this.signin = this.signin.bind(this)\n    }\n\n    signin = () => {\n        let username = this.refs.username.value.trim()\n        let password = this.refs.password.value.trim()\n        if (!username || !password) {\n            showTip({\n                title: '请将信息填写完整',\n                type: 'error'\n            })\n            return\n        }\n    }\n    render(){\n        return(\n            <div className='BG'>\n                <section className='sign-wrapper'>\n                    <h3>登录</h3>\n                    <input ref='username' type=\"text\" name='username' placeholder='用户名'/>\n                    <input ref='password' type=\"password\" name='password' placeholder='密码'/>\n                    <button onClick={this.signin}>登录</button>\n                </section>\n            </div>\n        )\n    }\n}\nexport default  signin","\nimport React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\n\n@saferender((error)=>{\n\n})\nclass ChatRoom extends Component {\n    render(){\n        return(\n            <div>聊天室</div>\n        )\n    }\n\n}\nexport default ChatRoom","\nimport React,{Component} from 'react'\nimport saferender from '../../decorator/saferender'\n\n@saferender((error)=>{\n\n})\nclass notfound extends Component {\n    render(){\n        return(\n            <div>404未找到该页面</div>\n        )\n    }\n\n}\nexport default notfound","\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport sign from './reducer/sign'\nimport thunk from 'redux-thunk';\n\n\nconst _reducers = {\n    sign: sign\n}\n\nconst reducers = combineReducers(_reducers);\n\nlet middlewares = [thunk]\n\nlet finalCreateStore = applyMiddleware()(createStore);\n\nconst store = finalCreateStore(reducers);\n\nexport default  store\n\n\n\n\n// const reducer = (state, action)=>{\n//     if(state === undefined){\n//         return {n: 10}\n//     }else{\n//         if(action.type === 'add'){\n//             var newState = {n: state.n + action.payload}\n//             return newState\n//         }else{\n//             return state\n//         }\n//     }\n// }\n//export default  const store = createStore(reducer) //一个store写法","\n// import {REG_STATE} from '../action/stateType'\n\nexport default function signReducer(state = {\n    regState: 10\n},action ) {\n    switch (action) {\n        case 'REG_STATE':\n            return Object.assign({},state,{\n                regState: action.payload.state\n            })\n        default:\n            return state\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport SignUp from './components/login/signup'\nimport SignIn from './components/login/signin'\nimport ChatRoom from './components/chat/chatroom'\nimport NotFound from './components/404/notfound'\nimport './webIM/init'\nimport store from './data/create'\nimport {Provider} from 'react-redux'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n      return (\n          <Provider store={store}>\n              <div className=\"App\">\n                  <Router>\n                      <div>\n                          <Switch>\n                              <Route path='/signin' component={SignIn}></Route>\n                              <Route path='/chatroom' component={ChatRoom}></Route>\n                              <Route path='/404' component={NotFound}></Route>\n                              <Route path='/' component={SignUp}></Route>\n                          </Switch>\n                      </div>\n                  </Router>\n              </div>\n          </Provider>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}